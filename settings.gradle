pluginManagement {
  repositories {
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.minecraftforge.net/" }
    maven { url "https://maven.quiltmc.org/repository/release" }
    gradlePluginPortal()
  }
}

dependencyResolutionManagement {
  repositories {
    mavenCentral()
  }
  versionCatalogs {
    // Minecraft Version
    def minecraftVersion = "1.20.1"

    // Mod Dependencies Versions
    // Common
    def reiVersion = "12.0.684"
    def kjsVersion = "2001.6.4-build.120"
    def ae2Version = "15.0.20"

    // Fabric
    def fabricLoaderVersion = "0.15.3" // https://fabricmc.net/develop/
    def fabricApiVersion = "0.91.0" // https://fabricmc.net/develop/
    //def topFabricVersion = "1.19-6.0.0"
    def registrateFabricVersion = "1.3.59-MC1.20"

    // Forge
    def forgeVersion = "47.2.18"
    def registrateForgeVersion = "MC1.20-1.3.3"
    def topForgeVersion = "1.20.1-10.0.1-3"

    // Libs
    def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
    def parchmentVersion = "2023.09.03" // https://parchmentmc.org/docs/getting-started
    def shadowVersion = "7.1.2"
    def architecturyPluginVersion = "3.4-SNAPSHOT"
    def architecturyLoomVersion = "1.3-SNAPSHOT"
    def vineFlowerVersion = "1.+"
    def macheteVersion = "1.+"
    def configurationVersion = "2.2.0"
    def gtCeuVersion = "1.0.20.b"
    def ldLibVersion = "1.0.22.a"
    def mixinExtrasVersion = "0.2.0"

    fabric {
      def parchment = version("parchment", parchmentVersion)
      library("parchment", "org.parchmentmc.data", "parchment-${minecraftVersion}").versionRef(parchment)

      def fabricLoader = version("fabricLoader", fabricLoaderVersion)
      library("fabricLoader", "net.fabricmc", "fabric-loader").versionRef(fabricLoader)

      def fabricApi = version("fabricApi", "${fabricApiVersion}+${minecraftVersion}")
      library("fabricApi", "net.fabricmc.fabric-api", "fabric-api").versionRef(fabricApi)

      def ldLib = version("ldlib", ldLibVersion)
      library("ldlib-common", "com.lowdragmc.ldlib", "ldlib-common-${minecraftVersion}").versionRef(ldLib)
      library("ldlib-fabric", "com.lowdragmc.ldlib", "ldlib-fabric-${minecraftVersion}").versionRef(ldLib)

      def registrate = version("registrate", registrateFabricVersion)
      library("registrate", "com.tterrag.registrate_fabric", "Registrate").versionRef(registrate)

      def rei = version("rei", reiVersion)
      library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-fabric").versionRef(rei)
      library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-fabric").versionRef(rei)
      library("rei-fabric", "me.shedaniel", "RoughlyEnoughItems-fabric").versionRef(rei)

      //def theoneprobe = version("theoneprobe", topFabricVersion)
      //library("theoneprobe", "mcjty.theoneprobe", "theoneprobe-fabric").versionRef(theoneprobe)

      def kubejs = version("kubejs", kjsVersion)
      library("kubejs-common", "dev.latvian.mods", "kubejs").versionRef(kubejs)
      library("kubejs-fabric", "dev.latvian.mods", "kubejs-fabric").versionRef(kubejs)

      def gtceu = version("gtceu", gtCeuVersion)
      library("gtceu-fabric", "com.gregtechceu.gtceu", "gtceu-fabric-${minecraftVersion}").versionRef(gtceu)
      library("gtceu-common", "com.gregtechceu.gtceu", "gtceu-common-${minecraftVersion}").versionRef(gtceu)

      def ae2 = version("ae2", ae2Version)
      library("ae2", "appeng", "appliedenergistics2-fabric").versionRef(ae2)

      def configuration = version("configuration", configurationVersion)
      library("configuration", "dev.toma.configuration", "configuration-fabric-1.20.1").versionRef(configuration)

      def mixinExtras = version("mixinExtras", mixinExtrasVersion)
      library("mixinExtras-fabric", "io.github.llamalad7", "mixinextras-fabric").versionRef(mixinExtras)
    }

    forge {
      version("forgeShortVersion", forgeVersion)
      def minecraftForge = version("minecraftForge", "${minecraftVersion}-${forgeVersion}")
      library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

      def ldLib = version("ldlib", ldLibVersion)
      library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

      def registrate = version("registrate", registrateForgeVersion)
      library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

      def rei = version("rei", reiVersion)
      library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
      library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
      library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

      def theoneprobe = version("theoneprobe", topForgeVersion)
      library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

      def kubejs = version("kubejs", kjsVersion)
      library("kubejs-forge", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)

      def gtceu = version("gtceu", gtCeuVersion)
      library("gtceu-forge", "com.gregtechceu.gtceu", "gtceu-forge-${minecraftVersion}").versionRef(gtceu)

      def ae2 = version("ae2", ae2Version)
      library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

      def configuration = version("configuration", configurationVersion)
      library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

      def mixinExtras = version("mixinExtras", mixinExtrasVersion)
      library("mixinExtras-common", "io.github.llamalad7", "mixinextras-common").versionRef(mixinExtras)
      library("mixinExtras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinExtras)

    }

    libs {
      version("quiltMappings", quiltMappingsVersion)
      version("parchment", parchmentVersion)

      def minecraft = version("minecraft", minecraftVersion)
      library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

      def shadow = version("shadow", shadowVersion)
      plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

      def architecturyPlugin = version("architectury", architecturyPluginVersion)
      plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

      def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
      plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

      def vineFlower = version("vineFlower", vineFlowerVersion)
      plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

      def machete = version("machete", macheteVersion)
      plugin("machete", "io.github.p03w.machete").versionRef(machete)
    }
  }
}

include("${mod_id}-common")
include("${mod_id}-fabric")
include("${mod_id}-forge")

project(":${mod_id}-common").setProjectDir(new File("common"))
project(":${mod_id}-forge").setProjectDir(new File("forge"))
project(":${mod_id}-fabric").setProjectDir(new File("fabric"))

rootProject.name = "${mod_name}"