pluginManagement {
  repositories {
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.minecraftforge.net/" }
    maven { url "https://maven.quiltmc.org/repository/release" }
    gradlePluginPortal()
  }
}

dependencyResolutionManagement {
  repositories {
    mavenCentral()
  }
  versionCatalogs {
    // Minecraft Version
    def minecraftVersion = "1.20.1"

    // Mod Dependencies Versions
    // Common
    def jeiVersion = "15.3.0.4"
    def reiVersion = "12.0.625"
    def kjsVersion = "2001.6.4-build.133"
    def emiVersion = "1.0.30"
    def ae2Version = "15.0.20"

    // Forge
    def forgeVersion = "47.2.0"
    def registrateForgeVersion = "MC1.20-1.3.3"
    def topForgeVersion = "1.20.1-10.0.1-3"
    def arsNouveauVersion = "4.6.0.99"
    def arsEnergistiqueVersion = "1.1.5"
    def botaniaVersion = "1.20.1-443-FORGE"

    // Libs
    def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
    def parchmentVersion = "2023.09.03" // https://parchmentmc.org/docs/getting-started
    def shadowVersion = "7.1.2"
    def architecturyPluginVersion = "3.4-SNAPSHOT"
    def architecturyLoomVersion = "1.3-SNAPSHOT"
    def vineFlowerVersion = "1.+"
    def macheteVersion = "1.+"
    def configurationVersion = "2.2.0"
    def gtCeuVersion = "1.3.1"
    def ldLibVersion = "1.0.25.p"
    def mixinExtrasVersion = "0.2.0"
    def geckoLibVersion = "4.2.1"
    def patchouliVersion = "1.20.1-83-FORGE"
    def curiosVersion = "5.7.0+1.20.1"

    forge {
      version("forgeShortVersion", forgeVersion)
      def minecraftForge = version("minecraftForge", "${minecraftVersion}-${forgeVersion}")
      library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

      def ldLib = version("ldlib", ldLibVersion)
      library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

      def registrate = version("registrate", registrateForgeVersion)
      library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

      def jei = version("jei", jeiVersion)
      library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
      library("jei-forge-api", "mezz.jei", "jei-${minecraftVersion}-forge-api").versionRef(jei)
      library("jei-forge", "mezz.jei", "jei-${minecraftVersion}-forge").versionRef(jei)

      def rei = version("rei", reiVersion)
      library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
      library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
      library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

      def emi = version("emi", emiVersion + "+" + minecraftVersion)
      library("emi", "dev.emi", "emi-forge").versionRef(emi)

      def theoneprobe = version("theoneprobe", topForgeVersion)
      library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

//      def kubejs = version("kubejs", kjsVersion)
//      library("kubejs-forge", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)

      def gtceu = version("gtceu", gtCeuVersion)
      library("gtceu-forge", "com.gregtechceu.gtceu", "gtceu-${minecraftVersion}").versionRef(gtceu)

      def configuration = version("configuration", configurationVersion)
      library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

      def mixinExtras = version("mixinExtras", mixinExtrasVersion)
      library("mixinExtras-common", "io.github.llamalad7", "mixinextras-common").versionRef(mixinExtras)
      library("mixinExtras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinExtras)

      def ae2 = version("ae2", ae2Version)
      library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

      def arsNouveau = version("arsnouveau", arsNouveauVersion)
      library("arsnouveau", "com.hollingsworth.ars_nouveau", "ars_nouveau-${minecraftVersion}").versionRef(arsNouveau)

      def arsEnergistique = version("arseng", arsEnergistiqueVersion)
      library("arseng", "maven.modrinth", "ars-energistique").versionRef(arsEnergistique)

      def botania = version("botania", botaniaVersion)
      library("botania", "vazkii.botania", "Botania").versionRef(botania)

      def curios = version("curios", curiosVersion)
      library("curios", "top.theillusivec4.curios", "curios-forge").versionRef(curios)

      def geckoLib = version("geckolib", geckoLibVersion)
      library("geckolib", "software.bernie.geckolib", "geckolib-forge-${minecraftVersion}").versionRef(geckoLib)

      def patchouli = version("patchouli", patchouliVersion)
      library("patchouli", "vazkii.patchouli", "Patchouli").versionRef(patchouli)

    }

    libs {
      version("quiltMappings", quiltMappingsVersion)
      version("parchment", parchmentVersion)

      def minecraft = version("minecraft", minecraftVersion)
      library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

      def shadow = version("shadow", shadowVersion)
      plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

      def architecturyPlugin = version("architectury", architecturyPluginVersion)
      plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

      def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
      plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

      def vineFlower = version("vineFlower", vineFlowerVersion)
      plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

      def machete = version("machete", macheteVersion)
      plugin("machete", "io.github.p03w.machete").versionRef(machete)

    }
  }
}


rootProject.name = "${mod_name}"